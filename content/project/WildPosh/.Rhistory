scale(shdi)+scale(np)+scale(ppp_exp)+scale(ppp_freq)+(1|obs)+(1|Site_id),
family=poisson, data = wide_format_poec)
simulationOutput <- simulateResiduals(fittedModel = Pseudomonadales_Pseudomonadaceae_bacterium_endosymbiont_mod6, plot = F)
plot(simulationOutput)
options(na.action = "na.fail")
dd_obs_po_ <- dredge(Pseudomonadales_Pseudomonadaceae_bacterium_endosymbiont_mod6, m.lim=c(0,4))
subset(dd_obs_po_,delta<2)
Pseudomonadales_Pseudomonadaceae_bacterium_endosymbiont_mod6 <- glmer(Pseudomonadales_Pseudomonadaceae_bacterium_endosymbiont ~
scale(shdi)+scale(np)+(1|obs)+(1|Site_id),
family=poisson, data = wide_format_poec)
summary(Pseudomonadales_Pseudomonadaceae_bacterium_endosymbiont_mod6)
shdi <- Effect("shdi",Pseudomonadales_Pseudomonadaceae_bacterium_endosymbiont_mod6,partial.residuals = TRUE, type="response")
np <- Effect("np",Pseudomonadales_Pseudomonadaceae_bacterium_endosymbiont_mod6,partial.residuals = TRUE, type="response")
Pseudo_shdi <- plot(shdi,lwd = 4,residuals.pch = 19, residuals.cex = 1.8, band.transparency=0, residuals.color="#fdae61",
colors="#fdae61",smooth.residuals=F, ci.style="lines")
Pseudo_np <- plot(np,lwd = 4,residuals.pch = 19, residuals.cex = 1.8, band.transparency=0, residuals.color="#fdae61",
colors="#fdae61",smooth.residuals=F, ci.style="lines")
plot(Pseudo_shdi)
plot(Pseudo_np)
plot(a) #CA_crop
plot(e) #ca_crop species
plot(b) #ed_Crop
plot(c) #np
plot(d) #np species
plot(f) #np
### CASSIDY
#################################
### test distribution normality ##########
#### not normally distributed
shannon_p_normality <- shapiro.test(richness_p_metrics$Shannon)
shannon_p_normality
shannon_a_normality <- shapiro.test(richness_a_metrics$Shannon)
shannon_a_normality
observed_p_normality <- shapiro.test(richness_p_metrics$Observed)
observed_p_normality
observed_a_normality <- shapiro.test(richness_a_metrics$Observed)
observed_a_normality
simpson_a_normality <- shapiro.test(richness_a_metrics$Simpson)
simpson_a_normality
chao_p_normality <- shapiro.test(richness_p_metrics$Chao1)
chao_p_normality
chao_a_normality <- shapiro.test(richness_a_metrics$Chao1)
chao_a_normality
##### normally distributed
simpson_p_normality <- shapiro.test(richness_p_metrics$Simpson)
simpson_p_normality
summary(richness_p_metrics$Shannon)
summary(richness_p_metrics$Observed)
summary(richness_p_metrics$Simpson)
summary(richness_p_metrics$Chao1)
summary(richness_a_metrics$Shannon)
summary(richness_a_metrics$Observed)
summary(richness_a_metrics$Simpson)
summary(richness_a_metrics$Chao1)
hist(richness_p_metrics$Shannon)
hist(richness_p_metrics$Observed)
hist(richness_p_metrics$Simpson)
hist(richness_p_metrics$Chao1)
hist(richness_a_metrics$Shannon)
hist(richness_a_metrics$Observed)
hist(richness_a_metrics$Simpson)
hist(richness_a_metrics$Chao1)
boxplot(richness_p_metrics$Shannon)
boxplot(richness_p_metrics$Observed)
boxplot(richness_p_metrics$Simpson)
boxplot(richness_p_metrics$Chao1)
boxplot(richness_a_metrics$Shannon)
boxplot(richness_a_metrics$Observed)
boxplot(richness_a_metrics$Simpson)
boxplot(richness_a_metrics$Chao1)
qqnorm(richness_p_metrics$Shannon)
qqnorm(richness_p_metrics$Observed)
qqnorm(richness_p_metrics$Simpson)
qqnorm(richness_p_metrics$Chao1)
qqnorm(richness_a_metrics$Shannon)
qqnorm(richness_a_metrics$Observed)
qqnorm(richness_a_metrics$Simpson)
qqnorm(richness_a_metrics$Chao1)
#######################
### Beta diversity ###
#######################
library(phyloseq)
library(vegan)
library(ggplot2)
library(dplyr)
library(pairwiseAdonis)
library(readxl)
## create relative abundance phyloseq datasets for each carabid species with no 0's
p_rel <- subset_samples(bac_physeq_clean_red_rf.rel, subset = Carabid_species == "Poecilus cupreus")
p_no_rel <- prune_taxa(taxa_sums(p_rel) > 0, p_rel)
a_rel <- subset_samples(bac_physeq_clean_red_rf.rel, subset = Carabid_species == "Anchomenus dorsalis")
newPhyloObject = subset_samples(a_rel, sample_id != "NA02" & sample_id != "NA03" & sample_id != "NA04" & sample_id != "NA05" & sample_id != "NA06")
a_no_rel <- prune_taxa(taxa_sums(newPhyloObject) > 0, newPhyloObject)
#### calculate the Bray Curtis distance to create dissimilarity matrix
p_dist <- distance(p_no_rel, method = "bray")
a_dist <- distance(a_no_rel, method = "bray")
###################
### ordinations ###
###################
### the following plot is Figure 1 in results document
ordination.pcoa = ordinate(bac_physeq_clean_red_rf.rel, method="PCoA", distance=p_dist)
print(ordination.pcoa)
summary(ordination.pcoa)
plot_ordination(bac_physeq_clean_red_rf.rel, ordination.pcoa, color="Carabid_species") +
theme_classic() +
theme(strip.background = element_blank()) ### Figure 1
### the following plots were just used to visualize
ordination.bs = ordinate(bac_physeq_clean_red_rf.rel, method="PCoA", distance=p_dist)
plot_ordination(bac_physeq_clean_red_rf.rel, ordination.bs, color="Site_id", shape="Carabid_species")  +  theme_classic() +
theme(strip.background = element_blank())+ geom_point(size=2) + stat_ellipse(aes(group=Carabid_species)) + theme(strip.background = element_blank())
ordination.p = ordinate(p_no_rel, method="PCoA", distance=p_dist)
print(ordination.p)
plot_ordination(p_no_rel, ordination.p, color="Site_name") +
theme_classic() +
theme(strip.background = element_blank())
plot_ordination(p_no_rel, ordination.p, color="Site_id")  +  theme_classic() +
theme(strip.background = element_blank())+ geom_point(size=2) + stat_ellipse(aes(group=Site_id)) + theme(strip.background = element_blank())
####  NMDS (Non-metric multi-dimensional scaling)
ord_nmds <- ordinate(bac_physeq_clean_red_rf.rel, method="NMDS", distance=p_dist)
stressplot(ord_nmds)
plot_ordination(bac_physeq_clean_red_rf.rel, ord_nmds, color="Site_name", shape="Carabid_species") +  theme_classic() +
theme(strip.background = element_blank()) + geom_point(size=2) + stat_ellipse(aes(group=Carabid_species)) + theme(strip.background = element_blank())
####  MDS (multi-dimensional scaling)
ord_mds <- ordinate(bac_physeq_clean_red_rf.rel, method="MDS", distance=p_dist)
plot_ordination(bac_physeq_clean_red_rf.rel, ord_mds, color="Site_name", shape="Carabid_species") + theme(strip.background = element_blank())  + geom_point(size=2) + stat_ellipse(aes(group=Carabid_species))
#############################
###      Permanova        ###
#############################
### Perform PERMANOVA for Poecilus cupreus using adonis2
metadata_p <- data.frame(sample_data(p_no_rel))
adonis_p <- adonis2(p_dist ~ Site_name, data = metadata_p)
print(adonis_p) ##### p = 0.001 ***
### Perform PERMANOVA for Anchomenus dorsalis
metadata_a <- data.frame(sample_data(a_no_rel))
adonis_a <- adonis2(a_dist ~ Site_name, data = metadata_a)
print(adonis_a) ##### p = 0.001 ***
### Run PAIRWISE
#library(devtools)
#install_github("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis")
library(pairwiseAdonis)
### pairwise between sites to see if any specific combo is significantly diff
pairwise.adonis(p_dist, factors = metadata_p$Site_name, p.adjust.m = "BH")
pairwise.adonis(a_dist, factors = metadata_a$Site_name, p.adjust.m = "BH")
p_beta_adonis <- betadisper(p_dist, metadata_p$Site_name, bias.adjust = TRUE)
print(p_beta_adonis)
a_beta_adonis <- betadisper(a_dist, metadata_p$Site_name, bias.adjust = TRUE)
print(a_beta_adonis)
anova(p_beta_adonis) ### p = 0.0001371
anova(a_beta_adonis)
permutest(p_beta_adonis) ### p = 0.001
permutest(a_beta_adonis)
p_anosim <- anosim(p_dist, metadata_p$Site_name)
p_anosim ### p = 0.001
a_anosim <- anosim(a_dist, metadata_a$Site_name)
a_anosim ### p = 0.002
### the following suggests no diff between sex
beta_adonis_sex_p <- betadisper(p_dist, metadata_p$Sex, bias.adjust = TRUE)
beta_adonis_sex_p
anova(beta_adonis_sex_p)
beta_adonis_sex_a <- betadisper(a_dist, metadata_a$Sex, bias.adjust = TRUE)
beta_adonis_sex_a
anova(beta_adonis_sex_a)
########################################################################
#### NOW moving onto using the landscape metrics #######################
########################################################################
# metrics <- read_excel("C:/Users/cassi/OneDrive/Desktop/Masters/UFZ Thesis/statsdata/metrics2.xlsx")
# frac <-  read_excel("C:/Users/cassi/OneDrive/Desktop/Masters/UFZ Thesis/statsdata/frac.xlsx")
#
### merge all landscape metrics with P. cupreus metadata
metadata_p <- data.frame(sample_data(p_no_rel))
nrow(metadata_p)
metadata_p1 <- merge(metadata_p, metrics)
nrow(metadata_p1)
# metadata_p2 <- data.frame(sample_data(p_no_rel))
# metadata_p2 <- merge(metadata_p, frac, by = "Site_id")
#### Permanova #####
## sig p values at bottom
permanpova_p_snh <- adonis2(p_dist ~ ca_SemiN, data = wide_format_poec, p.adjust.m = "BH")
permanpova_p_snh
permanpova_p_np <- adonis2(p_dist ~ np, data = wide_format_poec, p.adjust.m = "BH")
permanpova_p_np
permanpova_p_ppp <- adonis2(p_dist ~ ppp_exp, data = wide_format_poec, p.adjust.m = "BH")
permanpova_p_ppp
permanpova_p_crop <- adonis2(p_dist ~ ca_Crop, data = wide_format_poec, p.adjust.m = "BH")
permanpova_p_crop
permanpova_p_shdi <- adonis2(p_dist ~ shdi, data = wide_format_poec, p.adjust.m = "BH")
permanpova_p_shdi
permanpova_p_ppp_freq <- adonis2(p_dist ~ ppp_freq, data = wide_format_poec, p.adjust.m = "BH")
permanpova_p_ppp_freq
# Step 4: Merge landscape metrics with Anchomenus dorsalis metadata
metadata_a <- data.frame(sample_data(a_rel))
metadata_a <- merge(metadata_a, metrics, by = "Site_name")
metadata_a2 <- data.frame(sample_data(a_rel))
metadata_a2 <- merge(metadata_a, frac, by = "Site_name")
metadata_a2 <- data.frame(sample_data(a_rel))
metadata_a2 <- merge(metadata_a, frac, by = "Site_name")
#PERMANOVA for Anchomenus dorsalis
permanpova_a_crop <- adonis2(a_dist ~ ca_Crop, data = metadata_a, p.adjust.m = "BH")
permanpova_a_crop
permanpova_a_semi <- adonis2(a_dist ~ ca_Semi, data = metadata_a, p.adjust.m = "BH")
permanpova_a_semi
permanpova_a_urban <- adonis2(a_dist ~ ca_Urban, data = metadata_a, p.adjust.m = "BH")
permanpova_a_urban
permanpova_a_edSemi <- adonis2(a_dist ~ ed_Semi, data = metadata_a, p.adjust.m = "BH")
permanpova_a_edSemi
permanpova_a_edCrop <- adonis2(a_dist ~ ed_Crop, data = metadata_a, p.adjust.m = "BH")
permanpova_a_edCrop
permanpova_a_edUrban <- adonis2(a_dist ~ ed_Urban, data = metadata_a, p.adjust.m = "BH")
permanpova_a_edUrban
permanpova_a_npcrop <- adonis2(a_dist ~ np_Crop, data = metadata_a, p.adjust.m = "BH")
permanpova_a_npcrop
permanpova_a_npsemi <- adonis2(a_dist ~ np_Semi, data = metadata_a, p.adjust.m = "BH")
permanpova_a_npsemi
permanpova_a_npurban <- adonis2(a_dist ~ np_Urban, data = metadata_a, p.adjust.m = "BH")
permanpova_a_npurban
permanpova_a_shdi <- adonis2(a_dist ~ shdi, data = metadata_a, p.adjust.m = "BH")
permanpova_a_shdi
permanpova_a_np <- adonis2(a_dist ~ np, data = metadata_a2, p.adjust.m = "BH")
permanpova_a_np
permanpova_a_cropf <- adonis2(a_dist ~ frac_mn_Crop, data = richness_a_metrics, p.adjust.m = "BH")
permanpova_a_cropf
permanpova_a_semif <- adonis2(a_dist ~ frac_Semi, data = metadata_a2, p.adjust.m = "BH")
permanpova_a_semif
permanpova_a_roadsf <- adonis2(a_dist ~ frac_mn_Roads, data = metadata_a2, p.adjust.m = "BH")
permanpova_a_roadsf
### significant P values
permanpova_a_iji <- adonis2(a_dist ~ iji, data = metadata_a2, p.adjust.m = "BH")
permanpova_a_iji                    ### p = 0.003 ***
permanpova_a_roads <- adonis2(a_dist ~ ca_Roads, data = metadata_a2, p.adjust.m = "BH")
permanpova_a_roads                  ### p = 0.012 **
permanpova_p_semif <- adonis2(p_dist ~ frac_Semi, data = metadata_p2, p.adjust.m = "BH")
permanpova_p_semif                ### p = 0.008 **
permanpova_p_urbanf <- adonis2(p_dist ~ frac_mn_Urban, data = metadata_p2, p.adjust.m = "BH")
permanpova_p_urbanf                ### p = 0.006 **
permanpova_a_urbanf <- adonis2(a_dist ~ frac_mn_Urban, data = metadata_a2, p.adjust.m = "BH")
permanpova_a_urbanf                 ### p = 0.001 ***
permanpova_a_roadsf <- adonis2(a_dist ~ frac_mn_Roads, data = metadata_a2, p.adjust.m = "BH")
permanpova_a_roadsf                  ### p = 0.048 *
plot(a)
plot(b)
sha_po_mod5 <- lme(Shannon ~ scale(ca_SemiN)*scale(ppp_freq)+scale(np),
random=~1|Site_id,method = "REML", data = richness_p_metrics)
summary(sha_po_mod5)
summary(sha_po_mod5)
shdi <- Effect("shdi",sha_po_mod5,partial.residuals = TRUE, type="response")
np <- Effect("ppp_freq",sha_po_mod5,partial.residuals = TRUE, type="response")
sha_po_mod5 <- lme(Shannon ~ scale(ca_SemiN)*scale(ppp_freq)+scale(np),
random=~1|Site_id,method = "REML", data = richness_p_metrics)
summary(sha_po_mod5)
shdi <- Effect("ca_SemiN",sha_po_mod5,partial.residuals = TRUE, type="response")
np <- Effect("ppp_freq",sha_po_mod5,partial.residuals = TRUE, type="response")
a <- plot(shdi,lwd = 4,residuals.pch = 19, residuals.cex = 1.8, band.transparency=0, residuals.color="#fdae61",
colors="#fdae61",smooth.residuals=F, ci.style="lines")
b <- plot(np,lwd = 4,residuals.pch = 19, residuals.cex = 1.8, band.transparency=0, residuals.color="#fdae61",
colors="#fdae61",smooth.residuals=F, ci.style="lines")
plot(a)
plot(b)
a <- plot(shdi,lwd = 4,residuals.pch = 19, residuals.cex = 1.8, band.transparency=0, residuals.color="#a6d96a",
colors="#a6d96a",smooth.residuals=F, ci.style="lines")
b <- plot(np,lwd = 4,residuals.pch = 19, residuals.cex = 1.8, band.transparency=0, residuals.color="#f46d43",
colors="#f46d43",smooth.residuals=F, ci.style="lines")
plot(a)
plot(b)
a <- plot(shdi,lwd = 4,residuals.pch = 19, residuals.cex = 1.8, band.transparency=0, residuals.color="#b3de69",
colors="#b3de69",smooth.residuals=F, ci.style="lines")
b <- plot(np,lwd = 4,residuals.pch = 19, residuals.cex = 1.8, band.transparency=0, residuals.color="#fb8072",
colors="#fb8072",smooth.residuals=F, ci.style="lines")
plot(a)
plot(b)
plot(b)
library(sjPlot)
install.packages("sjPlot")
library(sjPlot)
plot_model(sha_po_mod5, type = "pred", terms = c("ca_SemiN","ppp_freq"))
# Enterobacterales_Yersiniaceae_NA
Enterobacterales_Yersiniaceae_NA_mod6 <- glmer(Enterobacterales_Yersiniaceae_NA ~ scale(shdi)+scale(np)+scale(ppp_exp)+scale(ppp_freq)+(1|obs)+(1|Site_id),
family=poisson, data = wide_format_poec)
simulationOutput <- simulateResiduals(fittedModel = Enterobacterales_Yersiniaceae_NA_mod6, plot = F)
# Enterobacterales_Yersiniaceae_NA
Enterobacterales_Yersiniaceae_NA_mod6 <- glmer(Enterobacterales_Yersiniaceae_NA ~ scale(shdi)*scale(ppp_exp)+scale(np)+(1|obs)+(1|Site_id),
family=poisson, data = wide_format_poec)
simulationOutput <- simulateResiduals(fittedModel = Enterobacterales_Yersiniaceae_NA_mod6, plot = F)
plot(simulationOutput)
options(na.action = "na.fail")
dd_obs_po_ <- dredge(Enterobacterales_Yersiniaceae_NA_mod6, m.lim=c(0,4))
subset(dd_obs_po_,delta<2)
ppp_exp <- Effect("ppp_exp",Enterobacterales_Yersiniaceae_NA_mod6,partial.residuals = TRUE, type="response")
Enterobacterales_np <- plot(np,lwd = 4,residuals.pch = 19, residuals.cex = 1.8, band.transparency=0, residuals.color="#fdae61",
colors="#fdae61",smooth.residuals=F, ci.style="lines")
Enterobacterales_ppp <- plot(ppp_exp,lwd = 4,residuals.pch = 19, residuals.cex = 1.8, band.transparency=0, residuals.color="#fdae61",
colors="#fdae61",smooth.residuals=F, ci.style="lines")
plot(Enterobacterales_np)
plot(Enterobacterales_ppp)
Enterobacterales_ppp <- plot(ppp_exp,lwd = 4,residuals.pch = 19, residuals.cex = 1.8, band.transparency=0, residuals.color="#fb8072",
colors="#fb8072",smooth.residuals=F, ci.style="lines")
plot(Enterobacterales_np)
plot(Enterobacterales_ppp)
# Pseudomonadales_Pseudomonadaceae_NA
Pseudomonadales_Pseudomonadaceae_NA_mod6 <- glmer(Pseudomonadales_Pseudomonadaceae_NA ~ scale(shdi)+scale(np)+scale(ppp_exp)+scale(ppp_freq)+(1|obs)+(1|Site_id),
family=poisson, data = wide_format_poec)
Pseudomonadales_Pseudomonadaceae_NA_mod6 <- glmer(Pseudomonadales_Pseudomonadaceae_NA ~ scale(ppp_freq)+(1|obs)+(1|Site_id),
family=poisson, data = wide_format_poec)
summary(Pseudomonadales_Pseudomonadaceae_NA_mod6)
# Pseudomonadales_Pseudomonadaceae_NA_2
Pseudomonadales_Pseudomonadaceae_NA_2_mod6 <- glmer(Pseudomonadales_Pseudomonadaceae_NA_2 ~ scale(shdi)+scale(np)+scale(ppp_exp)+scale(ppp_freq)+(1|obs)+(1|Site_id),
family=poisson, data = wide_format_poec)
wide_format_poec[1,]
# Pseudomonadales_Pseudomonadaceae_NA_2
Pseudomonadales_Pseudomonadaceae_NA_2_mod6 <- glmer(Pseudomonadales_Pseudomonadaceae_NA ~ scale(shdi)+scale(np)+scale(ppp_exp)+scale(ppp_freq)+(1|obs)+(1|Site_id),
family=poisson, data = wide_format_poec)
simulationOutput <- simulateResiduals(fittedModel = Pseudomonadales_Pseudomonadaceae_NA_2_mod6, plot = F)
plot(simulationOutput)
options(na.action = "na.fail")
dd_obs_po_ <- dredge(Pseudomonadales_Pseudomonadaceae_NA_2_mod6, m.lim=c(0,4))
subset(dd_obs_po_,delta<2)
Pseudomonadales_Pseudomonadaceae_NA_2_mod6 <- glmer(Pseudomonadales_Pseudomonadaceae_NA_2 ~ scale(ppp_exp)+(1|obs)+(1|Site_id),
family=poisson, data = wide_format_poec)
summary(Pseudomonadales_Pseudomonadaceae_NA_2_mod6)
ppp_exp <- Effect("ppp_exp",Pseudomonadales_Pseudomonadaceae_NA_2_mod6,partial.residuals = TRUE, type="response")
Pseudomonadales_ppp <- plot(ppp_exp,lwd = 4,residuals.pch = 19, residuals.cex = 1.8, band.transparency=0, residuals.color="#fdae61",
colors="#fdae61",smooth.residuals=F, ci.style="lines")
plot(Pseudomonadales_ppp)
# Pseudomonadales_Pseudomonadaceae_bacterium_endosymbiont
Pseudomonadales_Pseudomonadaceae_bacterium_endosymbiont_mod6 <- glmer(Pseudomonadales_Pseudomonadaceae_bacterium_endosymbiont ~
scale(ca_SemiN)*scale(ppp_exp)+scale(np)+(1|obs)+(1|Site_id),
family=poisson, data = wide_format_poec)
simulationOutput <- simulateResiduals(fittedModel = Pseudomonadales_Pseudomonadaceae_bacterium_endosymbiont_mod6, plot = F)
plot(simulationOutput)
options(na.action = "na.fail")
dd_obs_po_ <- dredge(Pseudomonadales_Pseudomonadaceae_bacterium_endosymbiont_mod6, m.lim=c(0,4))
subset(dd_obs_po_,delta<2)
Pseudo_shdi <- plot(ppp_exp,lwd = 4,residuals.pch = 19, residuals.cex = 1.8, band.transparency=0, residuals.color="#fdae61",
colors="#fdae61",smooth.residuals=F, ci.style="lines")
Pseudo_np <- plot(np,lwd = 4,residuals.pch = 19, residuals.cex = 1.8, band.transparency=0, residuals.color="#fdae61",
colors="#fdae61",smooth.residuals=F, ci.style="lines")
plot(Pseudo_shdi)
# Pseudomonadales_Pseudomonadaceae_bacterium_endosymbiont
Pseudomonadales_Pseudomonadaceae_bacterium_endosymbiont_mod6 <- glmer(Pseudomonadales_Pseudomonadaceae_bacterium_endosymbiont ~
scale(ca_SemiN)*scale(ppp_exp)+scale(np)+(1|obs)+(1|Site_id),
family=poisson, data = wide_format_poec)
shdi <- Effect("shdi",Pseudomonadales_Pseudomonadaceae_bacterium_endosymbiont_mod6,partial.residuals = TRUE, type="response")
summary(Pseudomonadales_Pseudomonadaceae_bacterium_endosymbiont_mod6)
shdi <- Effect("shdi",Pseudomonadales_Pseudomonadaceae_bacterium_endosymbiont_mod6,partial.residuals = TRUE, type="response")
np <- Effect("np",Pseudomonadales_Pseudomonadaceae_bacterium_endosymbiont_mod6,partial.residuals = TRUE, type="response")
Pseudo_shdi <- plot(ppp_exp,lwd = 4,residuals.pch = 19, residuals.cex = 1.8, band.transparency=0, residuals.color="#fdae61",
colors="#fdae61",smooth.residuals=F, ci.style="lines")
Pseudo_np <- plot(np,lwd = 4,residuals.pch = 19, residuals.cex = 1.8, band.transparency=0, residuals.color="#fdae61",
colors="#fdae61",smooth.residuals=F, ci.style="lines")
plot(Pseudo_shdi)
plot(Pseudo_np)
plot(a)
plot(b)
plot_model(sha_po_mod5, type = "pred", terms = c("ca_SemiN","ppp_freq"))
richness_p_metrics
Enterobacterales_ppp <- plot(ppp_exp,lwd = 4,residuals.pch = 19, residuals.cex = 1.8, band.transparency=0, residuals.color="#fb8072",
colors="#fb8072",smooth.residuals=F, ci.style="lines")
plot(Enterobacterales_np)
plot(Enterobacterales_ppp)
# Enterobacterales_Yersiniaceae_NA
Enterobacterales_Yersiniaceae_NA_mod6 <- glmer(Enterobacterales_Yersiniaceae_NA ~ scale(ca_SemiN)*scale(ppp_exp)+scale(np)+(1|obs)+(1|Site_id),
family=poisson, data = wide_format_poec)
Enterobacterales_np <- plot(np,lwd = 4,residuals.pch = 19, residuals.cex = 1.8, band.transparency=0, residuals.color="#fdae61",
colors="#fdae61",smooth.residuals=F, ci.style="lines")
Enterobacterales_ppp <- plot(ppp_exp,lwd = 4,residuals.pch = 19, residuals.cex = 1.8, band.transparency=0, residuals.color="#fb8072",
colors="#fb8072",smooth.residuals=F, ci.style="lines")
plot(Enterobacterales_np)
plot(Enterobacterales_ppp)
np <- Effect("np",Enterobacterales_Yersiniaceae_NA_mod6,partial.residuals = TRUE, type="response")
ppp_exp <- Effect("ppp_exp",Enterobacterales_Yersiniaceae_NA_mod6,partial.residuals = TRUE, type="response")
Enterobacterales_np <- plot(np,lwd = 4,residuals.pch = 19, residuals.cex = 1.8, band.transparency=0, residuals.color="#fdae61",
colors="#fdae61",smooth.residuals=F, ci.style="lines")
Enterobacterales_ppp <- plot(ppp_exp,lwd = 4,residuals.pch = 19, residuals.cex = 1.8, band.transparency=0, residuals.color="#fb8072",
colors="#fb8072",smooth.residuals=F, ci.style="lines")
plot(Enterobacterales_np)
plot(Enterobacterales_ppp)
eae_NA_2
Pseudomonadales_Pseudomonadaceae_NA_2_mod6 <- glmer(Pseudomonadales_Pseudomonadaceae_NA ~ scale(shdi)+scale(np)+scale(ppp_exp)+scale(ppp_freq)+(1|obs)+(1|Site_id),
family=poisson, data = wide_format_poec)
simulationOutput <- simulateResiduals(fittedModel = Pseudomonadales_Pseudomonadaceae_NA_2_mod6, plot = F)
plot(simulationOutput)
options(na.action = "na.fail")
dd_obs_po_ <- dredge(Pseudomonadales_Pseudomonadaceae_NA_2_mod6, m.lim=c(0,4))
subset(dd_obs_po_,delta<2)
Pseudomonadales_Pseudomonadaceae_NA_2_mod6 <- glmer(Pseudomonadales_Pseudomonadaceae_NA_2 ~ scale(ppp_exp)+(1|obs)+(1|Site_id),
family=poisson, data = wide_format_poec)
summary(Pseudomonadales_Pseudomonadaceae_NA_2_mod6)
ppp_exp <- Effect("ppp_exp",Pseudomonadales_Pseudomonadaceae_NA_2_mod6,partial.residuals = TRUE, type="response")
Pseudomonadales_ppp <- plot(ppp_exp,lwd = 4,residuals.pch = 19, residuals.cex = 1.8, band.transparency=0, residuals.color="#fdae61",
colors="#fdae61",smooth.residuals=F, ci.style="lines")
plot(Pseudomonadales_ppp)
Pseudomonadales_Pseudomonadaceae_bacterium_endosymbiont_mod6 <- glmer(Pseudomonadales_Pseudomonadaceae_bacterium_endosymbiont ~
scale(ca_SemiN)*scale(ppp_exp)+scale(np)+(1|obs)+(1|Site_id),
family=poisson, data = wide_format_poec)
summary(Pseudomonadales_Pseudomonadaceae_bacterium_endosymbiont_mod6 )
shdi <- Effect("ca_SemiN",Pseudomonadales_Pseudomonadaceae_bacterium_endosymbiont_mod6,partial.residuals = TRUE, type="response")
np <- Effect("np",Pseudomonadales_Pseudomonadaceae_bacterium_endosymbiont_mod6,partial.residuals = TRUE, type="response")
Pseudo_shdi <- plot(ppp_exp,lwd = 4,residuals.pch = 19, residuals.cex = 1.8, band.transparency=0, residuals.color="#fdae61",
colors="#fdae61",smooth.residuals=F, ci.style="lines")
Pseudo_np <- plot(np,lwd = 4,residuals.pch = 19, residuals.cex = 1.8, band.transparency=0, residuals.color="#fdae61",
colors="#fdae61",smooth.residuals=F, ci.style="lines")
plot(Pseudo_shdi)
plot(Pseudo_np)
Pseudo_shdi <- plot(ca_SemiN,lwd = 4,residuals.pch = 19, residuals.cex = 1.8, band.transparency=0, residuals.color="#fdae61",
colors="#fdae61",smooth.residuals=F, ci.style="lines")
Pseudo_np <- plot(np,lwd = 4,residuals.pch = 19, residuals.cex = 1.8, band.transparency=0, residuals.color="#fdae61",
colors="#fdae61",smooth.residuals=F, ci.style="lines")
shdi <- Effect("ca_SemiN",Pseudomonadales_Pseudomonadaceae_bacterium_endosymbiont_mod6,partial.residuals = TRUE, type="response")
np <- Effect("np",Pseudomonadales_Pseudomonadaceae_bacterium_endosymbiont_mod6,partial.residuals = TRUE, type="response")
Pseudo_shdi <- plot(ca_SemiN,lwd = 4,residuals.pch = 19, residuals.cex = 1.8, band.transparency=0, residuals.color="#fdae61",
colors="#fdae61",smooth.residuals=F, ci.style="lines")
Pseudo_np <- plot(np,lwd = 4,residuals.pch = 19, residuals.cex = 1.8, band.transparency=0, residuals.color="#fdae61",
colors="#fdae61",smooth.residuals=F, ci.style="lines")
Pseudomonadales_Pseudomonadaceae_bacterium_endosymbiont_mod6
ca_SemiN <- Effect("ca_SemiN",Pseudomonadales_Pseudomonadaceae_bacterium_endosymbiont_mod6,partial.residuals = TRUE, type="response")
np <- Effect("np",Pseudomonadales_Pseudomonadaceae_bacterium_endosymbiont_mod6,partial.residuals = TRUE, type="response")
Pseudo_shdi <- plot(ca_SemiN,lwd = 4,residuals.pch = 19, residuals.cex = 1.8, band.transparency=0, residuals.color="#fdae61",
colors="#fdae61",smooth.residuals=F, ci.style="lines")
Pseudo_np <- plot(np,lwd = 4,residuals.pch = 19, residuals.cex = 1.8, band.transparency=0, residuals.color="#fdae61",
colors="#fdae61",smooth.residuals=F, ci.style="lines")
plot(Pseudo_shdi)
plot(Pseudo_np)
#Lactobacillales_NA_NA_2
Lactobacillales_NA_NA_2_po_mod6 <- lmer(Lactobacillales_NA_NA_2 ~ scale(shdi)+scale(np)+scale(ppp_exp)+scale(ppp_freq)+(1|Site_id),
data = wide_format_poec)
wide_format_poec[1,]
#Lactobacillales_NA_NA_2
Lactobacillales_NA_NA_2_po_mod6 <- lmer(Lactobacillales_NA_NA ~ scale(shdi)+scale(np)+scale(ppp_exp)+scale(ppp_freq)+(1|Site_id),
data = wide_format_poec)
#Lactobacillales_NA_NA_2
Lactobacillales_NA_NA_2_po_mod6 <- lmer(Lactobacillales_NA_NA ~ scale(ca_SemiN)*scale(ppp_exp)+scale(np)+(1|Site_id),
data = wide_format_poec)
summary(Lactobacillales_NA_NA_2_po_mod6)
#Lactobacillales_NA_NA_3
Lactobacillales_NA_NA_3_po_mod6 <- glmer(Lactobacillales_NA_NA_3 ~ scale(ca_SemiN)*scale(ppp_exp)+scale(np)+(1|obs)+(1|Site_id),
family=poisson, data = wide_format_poec)
#Lactobacillales_NA_NA_3
Lactobacillales_NA_NA_3_po_mod6 <- glmer(Lactobacillales_NA_NA ~ scale(ca_SemiN)*scale(ppp_exp)+scale(np)+(1|obs)+(1|Site_id),
family=poisson, data = wide_format_poec)
summary(Lactobacillales_NA_NA_3_po_mod6)
qplot(x = ca_SemiN, y = Shannon, facets = ~ppp_freq, data = sha_po_mod5) +
geom_smooth(method = "lm")
eract_plot(sha_po_mod5, pred = ca_SemiN, modx = ppp_freq)
interact_plot(sha_po_mod5, pred = ca_SemiN, modx = ppp_freq)
library(jtools)
install.packages("jtools")
library(jtools)
interact_plot(sha_po_mod5, pred = ca_SemiN, modx = ppp_freq)
??interact_plot
interact_plot(sha_po_mod5, pred = ca_SemiN, modx = ppp_freq)
library(jtools)
interact_plot(sha_po_mod5, pred = ca_SemiN, modx = ppp_freq)
jtools::interact_plot(sha_po_mod5, pred = ca_SemiN, modx = ppp_freq)
visualize(sha_po_mod5, plot="model")
??visualize
library(jtools) # for summ()
states <- as.data.frame(state.x77)
fiti <- lm(Income ~ Illiteracy * Murder + `HS Grad`, data = states)
summ(fiti)
interact_plot(fiti, pred = Illiteracy, modx = Murder)
devtools::install_github("jacob-long/jtools")
install.packages("interactions")
library(interactions)
sim_slopes(sha_po_mod5, pred = ca_SemiN, modx = ppp_freq, jnplot = TRUE)
sim_slopes(sha_po_mod5, pred = ppp_freq, modx = ca_SemiN, jnplot = TRUE)
sim_slopes(sha_po_mod5, pred = ppp_freq, modx = ca_SemiN, interval=T)
sim_slopes(sha_po_mod5, pred = ppp_freq, modx = ca_SemiN, interval=T, data = richness_p_metrics)
fitiris <- lm(Petal.Length ~ Petal.Width * Species, data = iris)
interact_plot(fitiris, pred = Petal.Width, modx = Species, plot.points = TRUE)
plot_model(sha_po_mod5, type = "pred", terms = c("ca_SemiN", "ppp_freq [0, 6]"))
plot_model(sha_po_mod5, type = "pred", terms = c("ca_SemiN", "ppp_freq [0, 6]","ppp_freq"))
plot_model(sha_po_mod5, type = "pred", terms = c("ca_SemiN", "ppp_freq [0, 6]","np"))
plot_model(sha_po_mod5, type = "pred", terms = c("ca_SemiN", "np","ppp_freq"))
plot_model(sha_po_mod5, type = "pred", terms = c("ca_SemiN", "ppp_freq"))
?plot_model
plot_model(sha_po_mod5, type = "slope", terms = c("ca_SemiN", "ppp_freq"))
plot_model(sha_po_mod5, type = "resid", terms = c("ca_SemiN", "ppp_freq"))
plot_model(sha_po_mod5, type = "est", terms = c("ca_SemiN", "ppp_freq"))
plot_model(sha_po_mod5, type = "eff", terms = c("ca_SemiN", "ppp_freq"))
plot_model(sha_po_mod5, type = "emm", terms = c("ca_SemiN", "ppp_freq"))
plot_model(sha_po_mod5, type = "int", terms = c("ca_SemiN", "ppp_freq"))
plot_model(sha_po_mod5, type = "ca_SemiN", terms = c("ca_SemiN", "ppp_freq"))
plot_model(sha_po_mod5, type = "std", terms = c("ca_SemiN", "ppp_freq"))
plot_model(sha_po_mod5, type = "diag", terms = c("ca_SemiN", "ppp_freq"))
plot_model(sha_po_mod5, type = "slope", terms = c("ca_SemiN", "ppp_freq"))
plot_model(sha_po_mod5, terms = c("ca_SemiN", "ppp_freq"))
plot_model(sha_po_mod5, type = "pred", terms = c("ca_SemiN", "ppp_freq"))
plot_model(sha_po_mod5, type = "re", terms = c("ca_SemiN", "ppp_freq"))
plot_model(sha_po_mod5, type = "int"))
plot_model(sha_po_mod5, type = "int")
plot_model(sha_po_mod5, type = "int", terms = c("ca_SemiN", "ppp_freq"))
plot_model(sha_po_mod5, type = "eff", terms = c("ca_SemiN", "ppp_freq"))
plot_model(sha_po_mod5, type = "pred", terms = c("ca_SemiN","ppp_freq"))
wide_format_poec
wide_format_poec$Site_id
# Orbales_Orbaceae_uncultured_bacterium
Orbales_Orbaceae_uncultured_bacterium_mod6 <- glmer(Orbales_Orbaceae_uncultured_bacterium ~ scale(shdi)+scale(np)+scale(ppp_exp)+scale(ppp_freq)+(1|obs)+(1|Site_id),
family=MASS::negative.binomial(theta=1.75), data = wide_format_poec)
# Pseudomonadales_Pseudomonadaceae_NA
Pseudomonadales_Pseudomonadaceae_NA_mod6 <- glmer(Pseudomonadales_Pseudomonadaceae_NA ~ scale(shdi)+scale(np)+scale(ppp_exp)+scale(ppp_freq)+(1|obs)+(1|Site_id),
family=poisson, data = wide_format_poec)
s
# Pseudomonadales_Pseudomonadaceae_NA
Pseudomonadales_Pseudomonadaceae_NA_mod6 <- glmer(Pseudomonadales_Pseudomonadaceae_NA ~ scale(shdi)+scale(np)+scale(ppp_exp)+scale(ppp_freq)+(1|obs)+(1|Site_id),
family=poisson, data = wide_format_poec)
summary(Pseudomonadales_Pseudomonadaceae_NA_mod6)
ppp_exp <- Effect("ppp_exp",Pseudomonadales_Pseudomonadaceae_NA_mod6,partial.residuals = TRUE, type="response")
Pseudomonadales_ppp <- plot(ppp_exp,lwd = 4,residuals.pch = 19, residuals.cex = 1.8, band.transparency=0, residuals.color="#fdae61",
colors="#fdae61",smooth.residuals=F, ci.style="lines")
plot(Pseudomonadales_ppp)
Pseudomonadales_ppp <- plot(ppp_exp,lwd = 4,residuals.pch = 19, residuals.cex = 1.8, band.transparency=0, residuals.color="#fb8072",
colors="#fb8072",smooth.residuals=F, ci.style="lines")
plot(Pseudomonadales_ppp)
